<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Jewellery Shop</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Bootstrap CSS CDN -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="stylesheet" href="public/style.css">
</head>
<body>

  <!-- Navbar -->
<nav class="navbar navbar-expand-lg bg-white shadow-sm fixed-top">
  <div class="container">
    <!-- Brand -->
    <a class="navbar-brand fw-bold text-warning" href="#">Muthu Jewellery</a>

    <!-- Toggler Button for Mobile -->
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent"
      aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <!-- Collapsible Content -->
    <div class="collapse navbar-collapse justify-content-end" id="navbarContent">
      <button class="btn btn-warning text-white" id="loginBtn" data-bs-toggle="modal" data-bs-target="#authModal">
        Login / Signup
        </button>
    <button id="logoutBtn" class="btn btn-danger ms-2">Logout</button>
    </div>
  </div>
</nav>

  <!-- Hero Section -->
  <section class="hero position-relative text-center text-dark" style="min-height: 100vh; overflow: hidden;">
    <!-- Full-Screen Background Image -->
    <img src="/img/hero.jpg" class="hero-img position-absolute top-0 start-0 w-100 h-100 z-n1" alt="Jewellery Hero Image">

    <!-- Overlay (dark transparency) -->
    <div class="position-absolute top-0 start-0 w-100 h-100 bg-dark opacity-25 z-0"></div>

    <!-- Centered Overlay Content -->
    <div class="overlay position-relative d-flex flex-column justify-content-center align-items-center text-white text-shadow py-5 z-1" style="min-height: 100vh;">
      <h1 class="display-4 fw-bold text-warning">Shine Bright with Every Sparkle</h1>
      <p class="lead mb-4 fw-bold">Explore our premium collection of handcrafted gold and silver jewellery. Beauty meets elegance here.</p>
      <!-- Optional Buttons -->
      <!-- <div class="d-flex gap-3">
        <a href="#" id="customerBtn" class="btn btn-warning btn-lg text-white">Customer Details</a>
        <a href="#" id="invoiceBtn" class="btn btn-secondary btn-lg text-white">Invoice Details</a>
      </div> -->
    </div>
  </section>

  <!-- Authentication Modal -->
  <div class="modal fade" id="authModal" tabindex="-1" aria-labelledby="authModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <!-- Modal Header -->
        <div class="modal-header">
          <h5 class="modal-title" id="authModalLabel">Login</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>

        <!-- Modal Body -->
        <div class="modal-body">
          <!-- Login Form -->
          <form id="loginForm" method="POST" action="api/auth/login">
            <div class="mb-3">
              <label for="loginEmail" class="form-label">Email address</label>
              <input type="email" class="form-control" id="loginEmail" name="email" required>
            </div>
            <div class="mb-3">
              <label for="loginPassword" class="form-label">Password</label>
              <input type="password" class="form-control" id="loginPassword" name="password" required>
            </div>
            <button type="submit" class="btn btn-warning text-white w-100">Login</button>
            <div class="text-center mt-3">
              <span>Don't have an account? <a href="#" onclick="showSignup()">Signup</a></span>
            </div>
          </form>

          <!-- Signup Form -->
          <form id="signupForm" style="display: none;">
            <div class="mb-3">
              <label for="signupName" class="form-label">Full Name</label>
              <input type="text" class="form-control" id="signupName" name="name" required>
            </div>
            <div class="mb-3">
              <label for="signupEmail" class="form-label">Email address</label>
              <input type="email" class="form-control" id="signupEmail" name="email" required>
            </div>
            <div class="mb-3">
              <label for="signupPassword" class="form-label">Password</label>
              <input type="password" class="form-control" id="signupPassword" name="password" required>
            </div>
            <button type="submit" class="btn btn-warning text-white w-100">Signup</button>
            <div class="text-center mt-3">
              <span>Already have an account? <a href="#" onclick="showLogin()">Login</a></span>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

<div id="dashboardPage" class="container my-5 d-none">
  <h2 class="text-center mb-4 fw-bold text-uppercase ">Dashboard</h2>

  <!-- Metal Prices Section -->
  <div class="row justify-content-center">
    <div class="col-md-5 mb-4">
      <div class="card text-center shadow-sm">
        <div class="card-body">
  <h5 class="card-title fw-semibold">Gold Estimation Slip</h5>

  <!-- Gold Rate Display -->
  <p id="goldRateDisplay" class="h4 fw-bold text-warning">
    ₹ <span id="goldRateValue">5850</span> / gram
    <button class="btn btn-sm btn-outline-secondary ms-2" data-bs-toggle="modal" data-bs-target="#updateGoldRateModal" title="Update Rate">
      <i class="bi bi-pencil-fill"></i>
    </button>
  </p>

  <!-- Estimation Button -->
  <a href="/goldestimation" class="btn btn-warning mt-3">
    <i class="bi bi-coin me-1"></i> Estimate Gold
  </a>
</div>

      </div>
    </div>
    <div class="col-md-5 mb-4">
      <div class="card text-center shadow-sm">
        <div class="card-body">
  <h5 class="card-title fw-semibold">Silver Estimation Slip</h5>

  <!-- Silver Rate Display -->
 <p id="silverRateDisplay" class="h4 fw-bold text-secondary">
  ₹ <span id="silverRateValue">750</span> / gram
  <button class="btn btn-sm btn-outline-secondary ms-2" data-bs-toggle="modal" data-bs-target="#updateSilverRateModal" title="Update Rate">
    <i class="bi bi-pencil-fill"></i>
  </button>
</p>

<!-- Silver Estimation Button -->
<a href="/silverestimation" class="btn btn-secondary mt-3">
  <i class="bi bi-gem me-1"></i> Estimate Silver
</a>
</div>

      </div>
    </div>
  </div>

  <!-- Customer & Invoice Section -->
  <div class="row justify-content-center mt-5">
    <div class="col-md-5 mb-4">
      <div class="card text-center shadow-sm">
       <div class="card-body">
        <h5 class="card-title fw-semibold">Customer Management</h5>

        <!-- Buttons -->
        <div class="d-flex justify-content-center gap-3 mt-3">
          <!-- Create Customer Button -->
          <button class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#createCustomerModal">
            <i class="bi bi-person-plus-fill me-1"></i> Create Customer
          </button>

          <!-- Customer Details Button -->
          <a href="/customerdetails" class="btn btn-outline-info" id="customerBtn">
            <i class="bi bi-people-fill me-1"></i>Customer Details
          </a>
        </div>
      </div>
      </div>
    </div>
    <div class="col-md-5 mb-4">
      <div class="card text-center shadow-sm">
        <div class="card-body">
          <h5 class="card-title fw-semibold">Invoice Records</h5>
          <div class="d-flex justify-content-center gap-3 mt-3">
            <!-- Create Invoice Button -->
            <button class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#createInvoiceModal">
               <i class="bi bi-file-earmark-plus-fill me-1"></i>Create Invoice
            </button>

            <!-- View Invoices Button -->
            <a href="/invoicehistory" class="btn btn-outline-info" id="invoiceBtn">
              <i class="bi bi-receipt-cutoff me-1"></i> Invoice Details
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<!-- Create Customer Modal -->
<div class="modal fade" id="createCustomerModal" tabindex="-1" aria-labelledby="createCustomerModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-success text-white">
        <h5 class="modal-title" id="createCustomerModalLabel">Create Customer</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="createCustomerForm">
          <div class="mb-3">
            <label for="customerName" class="form-label">Full Name</label>
            <input type="text" class="form-control" id="customerName" name="name" required>
          </div>
          <div class="mb-3">
            <label for="customerPhone" class="form-label">Phone Number</label>
            <input type="text" class="form-control" id="customerPhone" name="phone" required>
          </div>
          <div class="mb-3">
            <label for="customerEmail" class="form-label">Email</label>
            <input type="email" class="form-control" id="customerEmail" name="email" required>
          </div>
          <button type="submit" class="btn btn-success w-100">Save Customer</button>
        </form>
      </div>
    </div>
  </div>
</div>


<!-- Create Invoice Modal -->
<div class="modal fade" id="createInvoiceModal" tabindex="-1" aria-labelledby="createInvoiceModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-success text-white">
        <h5 class="modal-title" id="createInvoiceModalLabel">Create Invoice</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="createInvoiceForm">
          <div class="mb-3">
            <label class="form-label">Customer Name</label>
            <input type="text" class="form-control" name="name" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Phone Number</label>
            <input type="text" class="form-control" name="phone" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Email</label>
            <input type="email" class="form-control" name="email" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Invoice ID</label>
            <input type="text" class="form-control" name="invoiceId" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Date</label>
            <input type="date" class="form-control" name="date" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Due Amount (₹)</label>
            <input type="number" class="form-control" name="amount" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Status</label>
            <select class="form-select" name="status" required>
              <option value="Pending">Pending</option>
              <option value="Partially Paid">Partially Paid</option>
              <option value="Completed">Completed</option>
            </select>
          </div>
          <button type="submit" class="btn btn-success w-100">Save Invoice</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Update Gold Rate Modal -->
<div class="modal fade" id="updateGoldRateModal" tabindex="-1" aria-labelledby="updateGoldRateModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form class="modal-content" id="goldRateForm">
      <div class="modal-header bg-warning text-white">
        <h5 class="modal-title" id="updateGoldRateModalLabel">Update Gold Rate</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <label for="newGoldRate" class="form-label">New Rate (₹ per gram)</label>
        <input type="number" step="0.01" min="0" class="form-control" id="newGoldRate" required>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-warning">Save</button>
      </div>
    </form>
  </div>
</div>

<!-- Update Silver Rate Modal -->
<div class="modal fade" id="updateSilverRateModal" tabindex="-1" aria-labelledby="updateSilverRateModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <form class="modal-content" id="silverRateForm">
      <div class="modal-header bg-secondary text-white">
        <h5 class="modal-title" id="updateSilverRateModalLabel">Update Silver Rate</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <label for="newSilverRate" class="form-label">New Rate (₹ per gram)</label>
        <input type="number" step="0.01" min="0" class="form-control" id="newSilverRate" required>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-secondary">Save</button>
      </div>
    </form>
  </div>
</div>



  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

  <!-- Toggle Forms Script -->
<script>
  function showSignup() {
    document.getElementById('loginForm').style.display = 'none';
    document.getElementById('signupForm').style.display = 'block';
    document.getElementById('authModalLabel').innerText = 'Signup';
  }

  function showLogin() {
    document.getElementById('signupForm').style.display = 'none';
    document.getElementById('loginForm').style.display = 'block';
    document.getElementById('authModalLabel').innerText = 'Login';
  }

  window.addEventListener('DOMContentLoaded', () => {
    const isLoggedIn = localStorage.getItem("isLoggedIn") === "true";

    const loginBtn = document.getElementById("loginBtn");
    const logoutBtn = document.getElementById("logoutBtn");

    if (isLoggedIn) {
      loginBtn.style.display = "none";
      logoutBtn.style.display = "inline-block";
      document.getElementById("dashboardPage")?.classList.remove("d-none");
    } else {
      loginBtn.style.display = "inline-block";
      logoutBtn.style.display = "none";
    }
  });



  document.getElementById("goldRateForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const newRate = document.getElementById("newGoldRate").value;

    if (newRate && newRate > 0) {
      try {
        const response = await fetch('/api/rates/update-gold', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ rate: parseFloat(newRate) })
        });

        const result = await response.json();

        if (result.success) {
          // Update display with confirmed rate from server
          document.getElementById("goldRateValue").textContent = parseFloat(result.rate.rate).toFixed(2);

          // Hide modal
          const modal = bootstrap.Modal.getInstance(document.getElementById('updateGoldRateModal'));
          modal.hide();
        } else {
          alert("Failed to update rate. Try again.");
        }

      } catch (err) {
        console.error("Error updating gold rate", err);
        alert("Server error while updating rate.");
      }
    } else {
      alert("Enter a valid gold rate.");
    }
  });

  // Load current gold rate on page load
  window.addEventListener('DOMContentLoaded', async () => {
    try {
      const response = await fetch("/api/rates/gold");
      const data = await response.json();
      if (data.rate) {
        document.getElementById("goldRateValue").textContent = parseFloat(data.rate).toFixed(2);
      }
    } catch (err) {
      console.error("Failed to load gold rate");
    }
  });


  document.getElementById("loginForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const email = document.getElementById("loginEmail").value;
    const password = document.getElementById("loginPassword").value;

    try {
      const response = await fetch("/api/auth/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, password }),
      });

      if (response.ok) {
        localStorage.setItem("isLoggedIn", "true");

        const modal = bootstrap.Modal.getInstance(document.getElementById('authModal'));
        modal.hide();

        document.getElementById("loginBtn").style.display = "none";
        document.getElementById("logoutBtn").style.display = "inline-block";
        document.getElementById("dashboardPage")?.classList.remove("d-none");
      } else {
        const error = await response.text();
        alert("Login failed: " + error);
      }
    } catch (err) {
      alert("Error during login. Try again.");
    }
  });

  document.getElementById("signupForm").addEventListener("submit", async function (e) {
    e.preventDefault(); // Stop default browser behavior

    const name = document.getElementById("signupName").value;
    const email = document.getElementById("signupEmail").value;
    const password = document.getElementById("signupPassword").value;

    try {
      const response = await fetch("/api/auth/signup", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, email, password })
      });

      const result = await response.json();

      if (response.ok) {
        alert("Signup successful! Please login.");
        showLogin(); // ✅ Switch to login form
      } else {
        alert(result.message || "Signup failed.");
      }
    } catch (error) {
      alert("Error during signup. Please try again.");
      console.error(error);
    }
  });

  // Logout button handler
  document.getElementById("logoutBtn").addEventListener("click", function () {
    localStorage.removeItem("isLoggedIn");
    document.getElementById("loginBtn").style.display = "inline-block";
    document.getElementById("logoutBtn").style.display = "none";
    document.getElementById("dashboardPage")?.classList.add("d-none");
  });

async function fetchMetalRates() {
  try {
    const response = await fetch('https://www.goldapi.io/api/XAU/INR', {
      headers: {
        'x-access-token': 'goldapi-abt0wusmd8dkjms-io',  // Use your actual API key
        'Content-Type': 'application/json'
      }
    });

    const goldData = await response.json();
    const goldPrice = (goldData.price / 31.1035).toFixed(2);

    const silverResponse = await fetch('https://www.goldapi.io/api/XAG/INR', {
      headers: {
        'x-access-token': 'goldapi-abt0wusmd8dkjms-io',
        'Content-Type': 'application/json'
      }
    });

    const silverData = await silverResponse.json();
    const silverPrice = (silverData.price / 31.1035).toFixed(2);

    // Update DOM
    document.getElementById("goldRate").textContent = `₹${goldPrice} / gram`;
    document.getElementById("silverRate").textContent = `₹${silverPrice} / gram`;

  } catch (error) {
    console.error("Error fetching metal rates:", error);
  }
}

document.addEventListener('DOMContentLoaded', () => {
  if (localStorage.getItem("isLoggedIn") === "true") {
    fetchMetalRates();
  }
});

document.addEventListener("DOMContentLoaded", () => {
  const customerBtn = document.getElementById("customerBtn");
  const invoiceBtn = document.getElementById("invoiceBtn");

  function checkLoginAndRedirect(targetUrl) {
    const isLoggedIn = localStorage.getItem("isLoggedIn") === "true";

    if (isLoggedIn) {
      window.location.href = targetUrl;
    } else {
      const loginModal = new bootstrap.Modal(document.getElementById('authModal'));
      loginModal.show();
    }
  }

  if (customerBtn) {
    customerBtn.addEventListener("click", (e) => {
      e.preventDefault();
      checkLoginAndRedirect("/customerdetails");
    });
  }

  if (invoiceBtn) {
    invoiceBtn.addEventListener("click", (e) => {
      e.preventDefault();
      checkLoginAndRedirect("/invoicehistory");
    });
  }
});


  document.getElementById('createCustomerForm').addEventListener('submit', function (e) {
    e.preventDefault();

    const name = document.getElementById('customerName').value;
    const phone = document.getElementById('customerPhone').value;
    const email = document.getElementById('customerEmail').value;

    fetch('/api/customer/create', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name, phone, email })
    })

    .then(res => res.json())
    .then(data => {
      alert("Customer created successfully!");
      document.getElementById('createCustomerForm').reset();
      const modal = bootstrap.Modal.getInstance(document.getElementById('createCustomerModal'));
      modal.hide();
    })
    .catch(err => {
      alert("Error creating customer");
      console.error(err);
    });
  });


    document.getElementById('createInvoiceForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const form = e.target;
    const invoiceData = {
      name: form.name.value,
      phone: form.phone.value,
      email: form.email.value,
      invoiceId: form.invoiceId.value,
      date: form.date.value,
      amount: parseFloat(form.amount.value),
      status: form.status.value
    };

    try {
      const response = await fetch('/api/invoice/create', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(invoiceData)
      });

      if (response.ok) {
        alert('Invoice created successfully!');
        form.reset();
        const modal = bootstrap.Modal.getInstance(document.getElementById('createInvoiceModal'));
        modal.hide();
      } else {
        alert('Failed to create invoice');
      }
    } catch (err) {
      console.error(err);
      alert('Error saving invoice');
    }
  });

// Fetch and display silver rate
(async function fetchSilverRate() {
  const res = await fetch('/api/rates/silver');
  if (res.ok) {
    const data = await res.json();
    document.getElementById('silverRateValue').textContent = parseFloat(data.rate).toFixed(2);
  }
})();

// Submit silver rate update
document.getElementById("silverRateForm").addEventListener("submit", async function (e) {
  e.preventDefault();

  const newRate = document.getElementById("newSilverRate").value;

  if (newRate && newRate > 0) {
    try {
      const response = await fetch('/api/rates/update-silver', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ rate: parseFloat(newRate) })
      });

      const result = await response.json();

      if (result.success) {
        document.getElementById("silverRateValue").textContent = parseFloat(result.rate.rate).toFixed(2);
        const modal = bootstrap.Modal.getInstance(document.getElementById('updateSilverRateModal'));
        modal.hide();
      } else {
        alert("Failed to update rate. Try again.");
      }

    } catch (err) {
      console.error("Error updating silver rate", err);
      alert("Server error while updating rate.");
    }
  } else {
    alert("Enter a valid silver rate.");
  }
});

// Load current silver rate on page load
window.addEventListener('DOMContentLoaded', async () => {
  try {
    const response = await fetch("/api/rates/silver");
    const data = await response.json();
    if (data.rate) {
      document.getElementById("silverRateValue").textContent = parseFloat(data.rate).toFixed(2);
    }
  } catch (err) {
    console.error("Failed to load silver rate");
  }
});



</script>

</body>
</html>
